{"version":3,"sources":["../../../next-server/server/image-optimizer.ts"],"names":["sharp","WEBP","PNG","JPEG","GIF","SVG","MIME_TYPES","CACHE_VERSION","ANIMATABLE_TYPES","VECTOR_TYPES","imageOptimizer","server","req","res","parsedUrl","nextConfig","distDir","imageData","images","deviceSizes","imageSizes","domains","loader","sizes","render404","finished","headers","url","w","q","query","mimeType","accept","href","statusCode","end","Array","isArray","isAbsolute","startsWith","hrefParsed","URL","toString","_error","includes","protocol","hostname","width","parseInt","isNaN","quality","hash","getHash","imagesDir","hashDir","now","Date","files","promises","readdir","file","filename","extension","split","expireAt","Number","contentType","setHeader","pipe","unlink","upstreamBuffer","upstreamType","maxAge","upstreamRes","fetch","ok","status","Buffer","from","arrayBuffer","get","getMaxAge","_req","method","resBuffers","mockRes","Stream","Writable","write","chunk","push","isBuffer","_write","mockHeaders","writeHead","_status","_headers","Object","assign","getHeader","name","toLowerCase","getHeaders","getHeaderNames","keys","value","_implicitHeader","getRequestHandler","nodeUrl","parse","concat","err","vector","animate","require","error","code","message","logError","transformer","metaWidth","metadata","resize","webp","png","jpeg","optimizedBuffer","toBuffer","mkdir","recursive","writeFile","items","item","update","String","digest","replace","parseCacheControl","str","map","Map","directive","key","trim","set","minimum","age","endsWith","slice","n","Math","max"],"mappings":"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","sourcesContent":["import nodeUrl, { UrlWithParsedQuery } from 'url'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { join } from 'path'\nimport { mediaType } from '@hapi/accept'\nimport { createReadStream, promises } from 'fs'\nimport { createHash } from 'crypto'\nimport Server from './next-server'\nimport { getContentType, getExtension } from './serve-static'\nimport { fileExists } from '../../lib/file-exists'\n// @ts-ignore no types for is-animated\nimport isAnimated from 'next/dist/compiled/is-animated'\nimport Stream from 'stream'\n\nlet sharp: typeof import('sharp')\n//const AVIF = 'image/avif'\nconst WEBP = 'image/webp'\nconst PNG = 'image/png'\nconst JPEG = 'image/jpeg'\nconst GIF = 'image/gif'\nconst SVG = 'image/svg+xml'\nconst MIME_TYPES = [/* AVIF, */ WEBP, PNG, JPEG]\nconst CACHE_VERSION = 1\nconst ANIMATABLE_TYPES = [WEBP, PNG, GIF]\nconst VECTOR_TYPES = [SVG]\n\ntype ImageData = {\n  deviceSizes: number[]\n  imageSizes: number[]\n  loader: string\n  path: string\n  domains?: string[]\n}\n\nexport async function imageOptimizer(\n  server: Server,\n  req: IncomingMessage,\n  res: ServerResponse,\n  parsedUrl: UrlWithParsedQuery\n) {\n  const { nextConfig, distDir } = server\n  const imageData: ImageData = nextConfig.images\n  const { deviceSizes = [], imageSizes = [], domains = [], loader } = imageData\n  const sizes = [...deviceSizes, ...imageSizes]\n\n  if (loader !== 'default') {\n    await server.render404(req, res, parsedUrl)\n    return { finished: true }\n  }\n\n  const { headers } = req\n  const { url, w, q } = parsedUrl.query\n  const mimeType = mediaType(headers.accept, MIME_TYPES) || ''\n  let href: string\n\n  if (!url) {\n    res.statusCode = 400\n    res.end('\"url\" parameter is required')\n    return { finished: true }\n  } else if (Array.isArray(url)) {\n    res.statusCode = 400\n    res.end('\"url\" parameter cannot be an array')\n    return { finished: true }\n  }\n\n  let isAbsolute: boolean\n\n  if (url.startsWith('/')) {\n    href = url\n    isAbsolute = false\n  } else {\n    let hrefParsed: URL\n\n    try {\n      hrefParsed = new URL(url)\n      href = hrefParsed.toString()\n      isAbsolute = true\n    } catch (_error) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!['http:', 'https:'].includes(hrefParsed.protocol)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!domains.includes(hrefParsed.hostname)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is not allowed')\n      return { finished: true }\n    }\n  }\n\n  if (!w) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) is required')\n    return { finished: true }\n  } else if (Array.isArray(w)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) cannot be an array')\n    return { finished: true }\n  }\n\n  if (!q) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) is required')\n    return { finished: true }\n  } else if (Array.isArray(q)) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) cannot be an array')\n    return { finished: true }\n  }\n\n  const width = parseInt(w, 10)\n\n  if (!width || isNaN(width)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) must be a number greater than 0')\n    return { finished: true }\n  }\n\n  if (!sizes.includes(width)) {\n    res.statusCode = 400\n    res.end(`\"w\" parameter (width) of ${width} is not allowed`)\n    return { finished: true }\n  }\n\n  const quality = parseInt(q)\n\n  if (isNaN(quality) || quality < 1 || quality > 100) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) must be a number between 1 and 100')\n    return { finished: true }\n  }\n\n  const hash = getHash([CACHE_VERSION, href, width, quality, mimeType])\n  const imagesDir = join(distDir, 'cache', 'images')\n  const hashDir = join(imagesDir, hash)\n  const now = Date.now()\n\n  if (await fileExists(hashDir, 'directory')) {\n    const files = await promises.readdir(hashDir)\n    for (let file of files) {\n      const [filename, extension] = file.split('.')\n      const expireAt = Number(filename)\n      const contentType = getContentType(extension)\n      if (now < expireAt) {\n        if (contentType) {\n          res.setHeader('Content-Type', contentType)\n        }\n        createReadStream(join(hashDir, file)).pipe(res)\n        return { finished: true }\n      } else {\n        await promises.unlink(join(hashDir, file))\n      }\n    }\n  }\n\n  let upstreamBuffer: Buffer\n  let upstreamType: string | null\n  let maxAge: number\n\n  if (isAbsolute) {\n    const upstreamRes = await fetch(href)\n\n    if (!upstreamRes.ok) {\n      res.statusCode = upstreamRes.status\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n\n    res.statusCode = upstreamRes.status\n    upstreamBuffer = Buffer.from(await upstreamRes.arrayBuffer())\n    upstreamType = upstreamRes.headers.get('Content-Type')\n    maxAge = getMaxAge(upstreamRes.headers.get('Cache-Control'))\n  } else {\n    try {\n      const _req: any = {\n        headers: req.headers,\n        method: req.method,\n        url: href,\n      }\n      const resBuffers: Buffer[] = []\n      const mockRes: any = new Stream.Writable()\n\n      mockRes.write = (chunk: Buffer | string) => {\n        resBuffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n      }\n      mockRes._write = (chunk: Buffer | string) => {\n        mockRes.write(chunk)\n      }\n\n      const mockHeaders: Record<string, string | string[]> = {}\n\n      mockRes.writeHead = (_status: any, _headers: any) =>\n        Object.assign(mockHeaders, _headers)\n      mockRes.getHeader = (name: string) => mockHeaders[name.toLowerCase()]\n      mockRes.getHeaders = () => mockHeaders\n      mockRes.getHeaderNames = () => Object.keys(mockHeaders)\n      mockRes.setHeader = (name: string, value: string | string[]) =>\n        (mockHeaders[name.toLowerCase()] = value)\n      mockRes._implicitHeader = () => {}\n      mockRes.finished = false\n      mockRes.statusCode = 200\n\n      await server.getRequestHandler()(_req, mockRes, nodeUrl.parse(href, true))\n      res.statusCode = mockRes.statusCode\n\n      upstreamBuffer = Buffer.concat(resBuffers)\n      upstreamType = mockRes.getHeader('Content-Type')\n      maxAge = getMaxAge(mockRes.getHeader('Cache-Control'))\n    } catch (err) {\n      res.statusCode = 500\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n  }\n\n  if (upstreamType) {\n    const vector = VECTOR_TYPES.includes(upstreamType)\n    const animate =\n      ANIMATABLE_TYPES.includes(upstreamType) && isAnimated(upstreamBuffer)\n    if (vector || animate) {\n      res.setHeader('Content-Type', upstreamType)\n      res.end(upstreamBuffer)\n      return { finished: true }\n    }\n  }\n\n  const expireAt = maxAge * 1000 + now\n  let contentType: string\n\n  if (mimeType) {\n    contentType = mimeType\n  } else if (upstreamType?.startsWith('image/') && getExtension(upstreamType)) {\n    contentType = upstreamType\n  } else {\n    contentType = JPEG\n  }\n\n  if (!sharp) {\n    try {\n      // eslint-disable-next-line import/no-extraneous-dependencies\n      sharp = require('sharp')\n    } catch (error) {\n      if (error.code === 'MODULE_NOT_FOUND') {\n        error.message += '\\n\\nLearn more: https://err.sh/next.js/install-sharp'\n        server.logError(error)\n        if (upstreamType) {\n          res.setHeader('Content-Type', upstreamType)\n        }\n        res.end(upstreamBuffer)\n      }\n      throw error\n    }\n  }\n\n  try {\n    const transformer = sharp(upstreamBuffer)\n    const { width: metaWidth } = await transformer.metadata()\n\n    if (metaWidth && metaWidth > width) {\n      transformer.resize(width)\n    }\n\n    //if (contentType === AVIF) {\n    // Soon https://github.com/lovell/sharp/issues/2289\n    //}\n    if (contentType === WEBP) {\n      transformer.webp({ quality })\n    } else if (contentType === PNG) {\n      transformer.png({ quality })\n    } else if (contentType === JPEG) {\n      transformer.jpeg({ quality })\n    }\n\n    const optimizedBuffer = await transformer.toBuffer()\n    await promises.mkdir(hashDir, { recursive: true })\n    const extension = getExtension(contentType)\n    const filename = join(hashDir, `${expireAt}.${extension}`)\n    await promises.writeFile(filename, optimizedBuffer)\n    res.setHeader('Content-Type', contentType)\n    res.end(optimizedBuffer)\n  } catch (error) {\n    server.logError(error)\n    if (upstreamType) {\n      res.setHeader('Content-Type', upstreamType)\n    }\n    res.end(upstreamBuffer)\n  }\n\n  return { finished: true }\n}\n\nfunction getHash(items: (string | number | undefined)[]) {\n  const hash = createHash('sha256')\n  for (let item of items) {\n    hash.update(String(item))\n  }\n  // See https://en.wikipedia.org/wiki/Base64#Filenames\n  return hash.digest('base64').replace(/\\//g, '-')\n}\n\nfunction parseCacheControl(str: string | null): Map<string, string> {\n  const map = new Map<string, string>()\n  if (!str) {\n    return map\n  }\n  for (let directive of str.split(',')) {\n    let [key, value] = directive.trim().split('=')\n    key = key.toLowerCase()\n    if (value) {\n      value = value.toLowerCase()\n    }\n    map.set(key, value)\n  }\n  return map\n}\n\nexport function getMaxAge(str: string | null): number {\n  const minimum = 60\n  const map = parseCacheControl(str)\n  if (map) {\n    let age = map.get('s-maxage') || map.get('max-age') || ''\n    if (age.startsWith('\"') && age.endsWith('\"')) {\n      age = age.slice(1, -1)\n    }\n    const n = parseInt(age, 10)\n    if (!isNaN(n)) {\n      return Math.max(n, minimum)\n    }\n  }\n  return minimum\n}\n"]}